swagger: '2.0'
info:
  version: '0.1'
  title: 'Blacklist API'
basePath: '/v0.1'
schemes:
  - 'http'
paths:
  /blacklist:
    post:
      summary: 'Creates a new blacklist record'
      consumes:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Blacklist object that needs to be added'
          required: true
          schema:
            $ref: '#/definitions/Blacklist'
      responses:
        '200':
          description: 'successful operation'
        '400':
          description: 'Invalid input'
    get:
      summary: 'Retrieves all blacklist records'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
  /blacklist/{blacklistId}:
    get:
      summary: 'Retrieves a specific blacklist record by ID'
      produces:
        - 'application/json'
      parameters:
        - name: 'blacklistId'
          in: 'path'
          description: 'ID of blacklist record to retrieve'
          required: true
          type: 'integer'
          format: 'int64'
      responses:
        '200':
          description: 'successful operation'
        '404':
          description: 'Blacklist record not found'
    put:
      summary: 'Updates a specific blacklist record by ID'
      consumes:
        - 'application/json'
      parameters:
        - name: 'blacklistId'
          in: 'path'
          description: 'ID of blacklist record that needs to be updated'
          required: true
          type: 'integer'
          format: 'int64'
        - in: 'body'
          name: 'body'
          description: 'Blacklist object that needs to be updated'
          required: true
          schema:
            $ref: '#/definitions/Blacklist'
      responses:
        '200':
          description: 'successful operation'
        '400':
          description: 'Invalid input'
        '404':
          description: 'Blacklist record not found'
    delete:
      summary: 'Deletes a specific blacklist record by ID'
      produces:
        - 'application/json'
      parameters:
        - name: 'blacklistId'
          in: 'path'
          description: 'ID of blacklist record to delete'
          required: true
          type: 'integer'
          format: 'int64'
      responses:
        '200':
          description: 'successful operation'
        '404':
          description: 'Blacklist record not found'
  /meta/blacklist:
    get:
      summary: 'Retrieves metadata about the blacklist model'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
definitions:
  Blacklist:
    type: 'object'
    properties:
      id:
        type: 'integer'
        format: 'int64'
      token:
        type: 'string'
